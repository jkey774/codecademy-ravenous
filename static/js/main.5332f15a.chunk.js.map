{"version":3,"sources":["components/NavBar/NavBar.js","actions/index.js","components/SearchBar/SearchBar.js","components/ResultsHeader/ResultsHeader.js","components/Business/Business.js","components/BusinessList/BusinessList.js","components/Pagination/PageCount.js","components/Pagination/Pagination.js","util/Yelp.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["NavBar","react_default","a","createElement","className","AppActionTypes","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTermChange","evt","setState","term","target","value","handleLocationChange","location","state","sortByOptions","Best Match","Highest Rated","Most Reviewed","errorMessages","termError","locationError","handleSearch","bind","assertThisInitialized","sortByOption","setSearchSortBy","searchSuccess","validateSearch","searchYelp","event","preventDefault","sortBy","setSearchTerm","setSearchLocation","classes","_this2","keys","map","sortByOptionValue","key","getSortByClass","onClick","handleSortByChange","errorMessage","role","aria-label","renderSortByOptions","onSubmit","onChange","placeholder","renderError","type","Component","connect","dispatch","payload","total","offset","_ref","sortByValue","pageIndexHigh","concat","Business","business","bgStyle","backgroundImage","imageSrc","style","name","address","city","zipCode","category","rating","reviewCount","BusinessList","businesses","components_Business_Business","id","PageCount","page","currentPage","maxPage","Math","ceil","Pagination","handlePageClick","data","selected","perPage","window","scrollTo","_this$props","forcePageObj","Pagination_PageCount","dist_default","assign","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","hrefBuilder","activeClassName","require","config","Yelp","search","fetch","headers","Authorization","process","then","response","ok","json","jsonResponse","businessList","image_url","address1","zip_code","categories","title","review_count","App","businessData","setSearchResults","Fragment","components_NavBar_NavBar","components_SearchBar_SearchBar","components_ResultsHeader_ResultsHeader","length","components_BusinessList_BusinessList","components_Pagination_Pagination","Boolean","hostname","match","defaultState","rootReducer","action","objectSpread","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5332f15a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NavBar.scss\";\n\nconst NavBar = () => (\n  <div className=\"NavBar\">\n    <div className=\"container\">\n      <nav className=\"navbar\">\n        <span className=\"navbar-brand mb-0 h1\">Ravenous</span>\n      </nav>\n    </div>\n  </div>\n);\n\nexport default NavBar;\n","const AppActionTypes = {\n  SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\n  SET_SEARCH_LOCATION: \"SET_SEARCH_LOCATION\",\n  SET_SEARCH_SORT_BY: \"SET_SEARCH_SORT_BY\",\n  SET_SEARCH_RESULTS: \"SET_SEARCH_RESULTS\"\n};\n\nexport const setSearchTerm = term => ({\n  type: AppActionTypes.SET_SEARCH_TERM,\n  payload: { term }\n});\n\nexport const setSearchLocation = location => ({\n  type: AppActionTypes.SET_SEARCH_LOCATION,\n  payload: { location }\n});\n\nexport const setSearchSortBy = sortBy => ({\n  type: AppActionTypes.SET_SEARCH_SORT_BY,\n  payload: { sortBy }\n});\n\nexport const setSearchResults = (total, businesses, offset, searchSuccess) => ({\n  type: AppActionTypes.SET_SEARCH_RESULTS,\n  payload: { total, businesses, offset },\n  searchSuccess: searchSuccess\n});\n","import React, { Component } from \"react\";\nimport \"./SearchBar.scss\";\nimport { connect } from \"react-redux\";\n\nimport {\n  setSearchTerm,\n  setSearchLocation,\n  setSearchSortBy\n} from \"../../actions\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n      location: \"\"\n    };\n    this.sortByOptions = {\n      \"Best Match\": \"best_match\",\n      \"Highest Rated\": \"rating\",\n      \"Most Reviewed\": \"review_count\"\n    };\n    this.errorMessages = {\n      termError: \"Please enter a search term.\",\n      locationError: \"Please enter a location\"\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleTermChange = evt => {\n    this.setState({\n      term: evt.target.value\n    });\n  };\n\n  handleLocationChange = evt => {\n    this.setState({\n      location: evt.target.value\n    });\n  };\n\n  handleSortByChange(sortByOption) {\n    this.props.setSearchSortBy(sortByOption);\n    if (this.props.searchSuccess && this.validateSearch()) {\n      this.props.searchYelp(\n        this.state.term,\n        this.state.location,\n        sortByOption,\n        0\n      );\n    }\n  }\n\n  handleSearch(event) {\n    event.preventDefault();\n    const isValid = this.validateSearch();\n    if (isValid) {\n      this.props.searchYelp(\n        this.state.term,\n        this.state.location,\n        this.props.sortBy\n      );\n      this.props.setSearchTerm(this.state.term);\n      this.props.setSearchLocation(this.state.location);\n    }\n  }\n\n  validateSearch() {\n    let termError = \"\";\n    let locationError = \"\";\n    if (this.state.term === \"\") {\n      termError = this.errorMessages.termError;\n    }\n    if (this.state.location === \"\") {\n      locationError = this.errorMessages.locationError;\n    }\n    this.setState({ termError, locationError });\n    if (termError || locationError) {\n      return false;\n    }\n    return true;\n  }\n\n  getSortByClass(sortByOption) {\n    let classes = \"btn btn-secondary\";\n    classes += this.props.sortBy === sortByOption ? \" active\" : \"\";\n    return classes;\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (\n        <li\n          key={sortByOptionValue}\n          className={this.getSortByClass(sortByOptionValue)}\n          onClick={this.handleSortByChange.bind(this, sortByOptionValue)}\n        >\n          {sortByOption}\n        </li>\n      );\n    });\n  }\n  renderError(errorMessage) {\n    if (errorMessage) {\n      return <div className=\"error-label\">{errorMessage}</div>;\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div>\n          <ul\n            className=\"SearchBar-sort-options\"\n            role=\"group\"\n            aria-label=\"sort by\"\n          >\n            {this.renderSortByOptions()}\n          </ul>\n          <form onSubmit={this.handleSearch}>\n            <div className=\"SearchBar-fields\">\n              <div>\n                <input\n                  value={this.state.term}\n                  onChange={this.handleTermChange}\n                  placeholder=\"Search Businesses\"\n                />\n                {this.renderError(this.state.termError)}\n              </div>\n              <div>\n                <input\n                  value={this.state.location}\n                  onChange={this.handleLocationChange}\n                  placeholder=\"Where?\"\n                />\n                {this.renderError(this.state.locationError)}\n              </div>\n            </div>\n            <div className=\"SearchBar-submit\">\n              <button type=\"submit\" className=\"btn btn-primary btn-lg\">\n                Let's Go\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  sortBy: state.sortBy,\n  searchSuccess: state.searchSuccess\n});\n\nconst mapDispatch = dispatch => ({\n  setSearchTerm: term => dispatch(setSearchTerm(term)),\n  setSearchLocation: location => dispatch(setSearchLocation(location)),\n  setSearchSortBy: sortBy => dispatch(setSearchSortBy(sortBy))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatch\n)(SearchBar);\n","import React from \"react\";\nimport \"./ResultsHeader.scss\";\n\nimport { connect } from \"react-redux\";\n\nconst searchTermPrefix = sortByValue =>\n  sortByValue === \"rating\" ? \"Best \" : \"\";\n\nconst ResultsHeader = ({\n  total,\n  term,\n  sortBy,\n  location,\n  offset,\n  pageIndexHigh,\n  searchSuccess\n}) => {\n  if (searchSuccess === true) {\n    return (\n      <div className=\"ResultsHeader\">\n        <div className=\"container\">\n          <div>\n            <h1>\n              <span>{`${searchTermPrefix(sortBy)} ${term}`}</span>\n              {` in ${location}`}\n            </h1>\n            <p className=\"results-count\">\n              Showing {(offset || 0) + 1}-{pageIndexHigh} of {total}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  } else if (searchSuccess === false) {\n    return (\n      <div className=\"ResultsHeader\">\n        <div className=\"container\">\n          <div>\n            <h1>\n              <span>No results for {term}</span> in {location}\n            </h1>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return null;\n};\n\nconst mapStateToProps = state => ({\n  searchSuccess: state.searchSuccess,\n  total: state.total,\n  offset: state.offset,\n  term: state.term,\n  location: state.location,\n  sortBy: state.sortBy\n});\n\nexport default connect(mapStateToProps)(ResultsHeader);\n","import React from \"react\";\nimport \"./Business.scss\";\n\n// Start Stateless Functional Component\n// add props as a parameter\n// remove 'this'\n\nconst Business = ({ business }) => {\n  const bgStyle = {\n    backgroundImage: `url(${business.imageSrc})`\n  };\n  return (\n    <div className=\"Business\">\n      <div className=\"Business-img\" style={bgStyle} />\n      <div className=\"Business-address\">\n        <h2>{business.name}</h2>\n        <p>{business.address}</p>\n        <p>\n          {business.city}, {business.state}\n        </p>\n        <p>{business.zipCode}</p>\n      </div>\n      <div className=\"Business-category\">\n        <p>{business.category}</p>\n      </div>\n      <div className=\"Business-footer\">\n        <p className=\"Business-rating\">{business.rating} stars</p>\n        <p className=\"Business-reviews\">{business.reviewCount} reviews</p>\n      </div>\n    </div>\n  );\n};\n\n// End Stateless Functional Component\n\n// class Business extends React.Component {\n//   render() {\n//     const {\n//       imageSrc,\n//       name,\n//       address,\n//       city,\n//       state,\n//       zipCode,\n//       category,\n//       rating,\n//       reviewCount\n//     } = this.business;\n//     const bgStyle = {\n//       backgroundImage: `url(${imageSrc})`\n//     };\n//     return (\n//       <div className=\"Business\">\n//         <div className=\"Business-img\" style={bgStyle} />\n//         <div className=\"Business-address\">\n//           <h2>{name}</h2>\n//           <p>{address}</p>\n//           <p>\n//             {city}, {state}\n//           </p>\n//           <p>{zipCode}</p>\n//         </div>\n//         <div className=\"Business-category\">\n//           <p>{category}</p>\n//         </div>\n//         <div className=\"Business-footer\">\n//           <p className=\"Business-rating\">{rating} stars</p>\n//           <p className=\"Business-reviews\">{reviewCount} reviews</p>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nexport default Business;\n","import React from \"react\";\nimport \"./BusinessList.scss\";\nimport Business from \"../Business/Business\";\n\nconst BusinessList = ({ businesses }) => (\n  <div className=\"BusinessList container\">\n    <div className=\"card-deck\">\n      {businesses.map(business => {\n        return <Business key={business.id} business={business} />;\n      })}\n    </div>\n  </div>\n);\n\nexport default BusinessList;\n","import React from \"react\";\n\nconst PageCount = ({ total, page }) => {\n  if (total) {\n    const currentPage = page;\n    const maxPage = Math.ceil(total / 21);\n    return (\n      <div className=\"PageCount\">\n        Page {currentPage} of {maxPage}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default PageCount;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PageCount from \"./PageCount\";\nimport ReactPaginate from \"react-paginate\";\nimport \"./Pagination.scss\";\n\nclass Pagination extends Component {\n  static propTypes = {\n    perPage: PropTypes.number.isRequired\n  };\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  handlePageClick(data) {\n    let selected = data.selected;\n    let offset = Math.ceil(selected * this.props.perPage);\n    this.setState({ offset: offset, selected: selected }, () => {\n      window.scrollTo(0, 469);\n      this.props.searchYelp(\n        this.props.term,\n        this.props.location,\n        this.props.sortBy,\n        offset\n      );\n    });\n  }\n\n  render() {\n    const { total, perPage, offset } = this.props;\n    let { selected } = this.state;\n\n    if (total) {\n      let forcePageObj = {};\n      if (!offset) {\n        forcePageObj[\"forcePage\"] = 0;\n      }\n      return (\n        <div className=\"Pagination container\">\n          <PageCount page={selected ? selected + 1 : 1} total={total} />\n          <ReactPaginate\n            previousLabel={\"«\"}\n            nextLabel={\"»\"}\n            breakLabel={\"...\"}\n            breakClassName={\"break-me\"}\n            pageCount={Math.ceil(total / perPage)}\n            marginPagesDisplayed={1}\n            pageRangeDisplayed={2}\n            onPageChange={this.handlePageClick}\n            containerClassName={\"Pagination-buttons\"}\n            hrefBuilder={() => \"#\"}\n            activeClassName={\"active\"}\n            {...forcePageObj}\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  term: state.term,\n  location: state.location,\n  sortBy: state.sortBy,\n  total: state.total\n});\n\nexport default connect(mapStateToProps)(Pagination);\n","require(\"dotenv\").config();\n\nconst apiKey = process.env.REACT_APP_YELP_API_KEY;\nconst limit = 21;\n\nconst Yelp = {\n  search(term, location, sortBy, offset) {\n    return fetch(\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}&limit=${limit}&offset=${offset ||\n        \"\"}`,\n      {\n        headers: {\n          Authorization: `Bearer ${apiKey}`\n        }\n      }\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      })\n      .then(jsonResponse => {\n        if (jsonResponse && jsonResponse.businesses) {\n          return {\n            total: jsonResponse.total,\n            businessList: jsonResponse.businesses.map(business => {\n              return {\n                id: business.id,\n                imageSrc: business.image_url,\n                name: business.name,\n                address: business.location.address1,\n                city: business.location.city,\n                state: business.location.state,\n                zipCode: business.location.zip_code,\n                category: business.categories[0].title,\n                rating: business.rating,\n                reviewCount: business.review_count\n              };\n            })\n          };\n        }\n      });\n  }\n};\n\nexport default Yelp;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport ResultsHeader from \"./components/ResultsHeader/ResultsHeader\";\nimport BusinessList from \"./components/BusinessList/BusinessList\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport Yelp from \"./util/Yelp\";\nimport { setSearchResults } from \"./actions\";\nimport \"./App.css\";\n\nrequire(\"dotenv\").config();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy, offset) {\n    Yelp.search(term, location, sortBy, offset).then(businessData => {\n      if (businessData) {\n        this.props.setSearchResults(\n          businessData.total,\n          businessData.businessList,\n          offset,\n          true\n        );\n      } else {\n        this.props.setSearchResults(0, [], 0, false);\n      }\n    });\n  }\n\n  render() {\n    const { businesses, offset } = this.props;\n    return (\n      <React.Fragment>\n        <NavBar />\n        <SearchBar searchYelp={this.searchYelp} />\n        <ResultsHeader pageIndexHigh={(offset || 0) + businesses.length} />\n        <BusinessList businesses={businesses} />\n        <Pagination perPage={21} searchYelp={this.searchYelp} offset={offset} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  total: state.total,\n  businesses: state.businesses,\n  offset: state.offset,\n  searchSuccess: state.searchSuccess\n});\n\nconst mapDispatch = dispatch => ({\n  setSearchResults: (total, businesses, offset, searchSuccess) =>\n    dispatch(setSearchResults(total, businesses, offset, searchSuccess))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatch\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const AppActionTypes = {\n  SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\n  SET_SEARCH_LOCATION: \"SET_SEARCH_LOCATION\",\n  SET_SEARCH_SORT_BY: \"SET_SEARCH_SORT_BY\",\n  SET_SEARCH_RESULTS: \"SET_SEARCH_RESULTS\"\n};\n\nconst defaultState = {\n  term: \"\",\n  location: \"\",\n  sortBy: \"best_match\",\n  businesses: []\n};\n\nconst rootReducer = (state, action) => {\n  state = state || defaultState;\n\n  switch (action.type) {\n    case AppActionTypes.SET_SEARCH_TERM:\n      return {\n        ...state,\n        term: action.payload.term\n      };\n\n    case AppActionTypes.SET_SEARCH_LOCATION:\n      return {\n        ...state,\n        location: action.payload.location\n      };\n\n    case AppActionTypes.SET_SEARCH_SORT_BY:\n      return {\n        ...state,\n        sortBy: action.payload.sortBy\n      };\n\n    case AppActionTypes.SET_SEARCH_RESULTS:\n      return {\n        ...state,\n        total: action.payload.total,\n        businesses: action.payload.businesses,\n        offset: action.payload.offset,\n        searchSuccess: action.searchSuccess\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport store from \"./store/\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}